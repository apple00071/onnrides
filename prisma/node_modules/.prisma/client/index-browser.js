
/* !!! This is code generated by Prisma. Do not edit directly. !!!
/* eslint-disable */

Object.defineProperty(exports, "__esModule", { value: true });

const {
  Decimal,
  objectEnumValues,
  makeStrictEnum,
  Public,
  getRuntime,
  skip
} = require('./runtime/index-browser.js')


const Prisma = {}

exports.Prisma = Prisma
exports.$Enums = {}

/**
 * Prisma Client JS version: 6.7.0
 * Query Engine version: 3cff47a7f5d65c3ea74883f1d736e41d68ce91ed
 */
Prisma.prismaVersion = {
  client: "6.7.0",
  engine: "3cff47a7f5d65c3ea74883f1d736e41d68ce91ed"
}

Prisma.PrismaClientKnownRequestError = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`PrismaClientKnownRequestError is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)};
Prisma.PrismaClientUnknownRequestError = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`PrismaClientUnknownRequestError is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)}
Prisma.PrismaClientRustPanicError = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`PrismaClientRustPanicError is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)}
Prisma.PrismaClientInitializationError = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`PrismaClientInitializationError is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)}
Prisma.PrismaClientValidationError = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`PrismaClientValidationError is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)}
Prisma.Decimal = Decimal

/**
 * Re-export of sql-template-tag
 */
Prisma.sql = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`sqltag is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)}
Prisma.empty = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`empty is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)}
Prisma.join = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`join is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)}
Prisma.raw = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`raw is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)}
Prisma.validator = Public.validator

/**
* Extensions
*/
Prisma.getExtensionContext = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`Extensions.getExtensionContext is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)}
Prisma.defineExtension = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`Extensions.defineExtension is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)}

/**
 * Shorthand utilities for JSON filtering
 */
Prisma.DbNull = objectEnumValues.instances.DbNull
Prisma.JsonNull = objectEnumValues.instances.JsonNull
Prisma.AnyNull = objectEnumValues.instances.AnyNull

Prisma.NullTypes = {
  DbNull: objectEnumValues.classes.DbNull,
  JsonNull: objectEnumValues.classes.JsonNull,
  AnyNull: objectEnumValues.classes.AnyNull
}



/**
 * Enums
 */

exports.Prisma.TransactionIsolationLevel = makeStrictEnum({
  ReadUncommitted: 'ReadUncommitted',
  ReadCommitted: 'ReadCommitted',
  RepeatableRead: 'RepeatableRead',
  Serializable: 'Serializable'
});

exports.Prisma.AdminNotificationScalarFieldEnum = {
  id: 'id',
  type: 'type',
  title: 'title',
  recipient: 'recipient',
  channel: 'channel',
  status: 'status',
  error: 'error',
  data: 'data',
  created_at: 'created_at',
  updated_at: 'updated_at'
};

exports.Prisma.DeliveryBookingScalarFieldEnum = {
  id: 'id',
  delivery_partner_id: 'delivery_partner_id',
  booking_id: 'booking_id',
  pickup_location: 'pickup_location',
  dropoff_location: 'dropoff_location',
  status: 'status',
  estimated_distance: 'estimated_distance',
  estimated_duration: 'estimated_duration',
  actual_duration: 'actual_duration',
  price: 'price',
  created_at: 'created_at',
  updated_at: 'updated_at'
};

exports.Prisma.DeliveryPartnerScalarFieldEnum = {
  id: 'id',
  user_id: 'user_id',
  vehicle_type: 'vehicle_type',
  vehicle_number: 'vehicle_number',
  license_number: 'license_number',
  is_available: 'is_available',
  current_location: 'current_location',
  rating: 'rating',
  total_trips: 'total_trips',
  created_at: 'created_at',
  updated_at: 'updated_at'
};

exports.Prisma.DeliveryTrackingScalarFieldEnum = {
  id: 'id',
  delivery_booking_id: 'delivery_booking_id',
  location: 'location',
  timestamp: 'timestamp',
  status: 'status',
  notes: 'notes'
};

exports.Prisma.Booking_historyScalarFieldEnum = {
  id: 'id',
  booking_id: 'booking_id',
  action: 'action',
  details: 'details',
  created_by: 'created_by',
  created_at: 'created_at',
  updated_at: 'updated_at'
};

exports.Prisma.BookingsScalarFieldEnum = {
  id: 'id',
  user_id: 'user_id',
  vehicle_id: 'vehicle_id',
  start_date: 'start_date',
  end_date: 'end_date',
  total_hours: 'total_hours',
  total_price: 'total_price',
  status: 'status',
  payment_status: 'payment_status',
  payment_details: 'payment_details',
  created_at: 'created_at',
  updated_at: 'updated_at',
  pickup_location: 'pickup_location',
  dropoff_location: 'dropoff_location',
  booking_id: 'booking_id',
  payment_intent_id: 'payment_intent_id'
};

exports.Prisma.CouponsScalarFieldEnum = {
  id: 'id',
  code: 'code',
  description: 'description',
  discount_type: 'discount_type',
  discount_value: 'discount_value',
  min_booking_amount: 'min_booking_amount',
  max_discount_amount: 'max_discount_amount',
  start_date: 'start_date',
  end_date: 'end_date',
  usage_limit: 'usage_limit',
  times_used: 'times_used',
  is_active: 'is_active',
  created_at: 'created_at',
  updated_at: 'updated_at'
};

exports.Prisma.Document_submissionsScalarFieldEnum = {
  id: 'id',
  user_id: 'user_id',
  document_type: 'document_type',
  document_url: 'document_url',
  status: 'status',
  admin_comments: 'admin_comments',
  created_at: 'created_at',
  updated_at: 'updated_at'
};

exports.Prisma.DocumentsScalarFieldEnum = {
  id: 'id',
  user_id: 'user_id',
  type: 'type',
  status: 'status',
  file_url: 'file_url',
  rejection_reason: 'rejection_reason',
  created_at: 'created_at',
  updated_at: 'updated_at'
};

exports.Prisma.Email_logsScalarFieldEnum = {
  id: 'id',
  recipient: 'recipient',
  subject: 'subject',
  message_content: 'message_content',
  status: 'status',
  error: 'error',
  created_at: 'created_at',
  updated_at: 'updated_at'
};

exports.Prisma.LocationsScalarFieldEnum = {
  id: 'id',
  name: 'name',
  address: 'address',
  created_at: 'created_at',
  updated_at: 'updated_at'
};

exports.Prisma.PaymentsScalarFieldEnum = {
  id: 'id',
  booking_id: 'booking_id',
  user_id: 'user_id',
  amount: 'amount',
  payment_method: 'payment_method',
  transaction_id: 'transaction_id',
  status: 'status',
  created_at: 'created_at',
  updated_at: 'updated_at'
};

exports.Prisma.ProfilesScalarFieldEnum = {
  id: 'id',
  user_id: 'user_id',
  name: 'name',
  phone: 'phone',
  avatar_url: 'avatar_url',
  address: 'address',
  city: 'city',
  state: 'state',
  country: 'country',
  zip_code: 'zip_code',
  created_at: 'created_at',
  updated_at: 'updated_at'
};

exports.Prisma.ReviewsScalarFieldEnum = {
  id: 'id',
  user_id: 'user_id',
  vehicle_id: 'vehicle_id',
  booking_id: 'booking_id',
  rating: 'rating',
  comment: 'comment',
  created_at: 'created_at',
  updated_at: 'updated_at'
};

exports.Prisma.SettingsScalarFieldEnum = {
  id: 'id',
  key: 'key',
  value: 'value',
  created_at: 'created_at',
  updated_at: 'updated_at'
};

exports.Prisma.Sms_logsScalarFieldEnum = {
  id: 'id',
  phone_number: 'phone_number',
  message: 'message',
  status: 'status',
  created_at: 'created_at',
  updated_at: 'updated_at'
};

exports.Prisma.Trip_initiationsScalarFieldEnum = {
  id: 'id',
  booking_id: 'booking_id',
  checklist_completed: 'checklist_completed',
  customer_name: 'customer_name',
  customer_phone: 'customer_phone',
  customer_email: 'customer_email',
  customer_dl_number: 'customer_dl_number',
  customer_address: 'customer_address',
  emergency_contact: 'emergency_contact',
  emergency_name: 'emergency_name',
  customer_aadhaar_number: 'customer_aadhaar_number',
  customer_dob: 'customer_dob',
  vehicle_number: 'vehicle_number',
  documents: 'documents',
  terms_accepted: 'terms_accepted',
  notes: 'notes',
  created_at: 'created_at',
  updated_at: 'updated_at'
};

exports.Prisma.UsersScalarFieldEnum = {
  id: 'id',
  name: 'name',
  email: 'email',
  password_hash: 'password_hash',
  phone: 'phone',
  reset_token: 'reset_token',
  reset_token_expiry: 'reset_token_expiry',
  is_blocked: 'is_blocked',
  role: 'role',
  created_at: 'created_at',
  updated_at: 'updated_at'
};

exports.Prisma.VehiclesScalarFieldEnum = {
  id: 'id',
  name: 'name',
  type: 'type',
  location: 'location',
  quantity: 'quantity',
  price_per_hour: 'price_per_hour',
  min_booking_hours: 'min_booking_hours',
  is_available: 'is_available',
  images: 'images',
  status: 'status',
  created_at: 'created_at',
  updated_at: 'updated_at',
  price_15_days: 'price_15_days',
  price_30_days: 'price_30_days',
  price_7_days: 'price_7_days',
  delivery_price_15_days: 'delivery_price_15_days',
  delivery_price_30_days: 'delivery_price_30_days',
  delivery_price_7_days: 'delivery_price_7_days',
  vehicle_category: 'vehicle_category'
};

exports.Prisma.SortOrder = {
  asc: 'asc',
  desc: 'desc'
};

exports.Prisma.JsonNullValueInput = {
  JsonNull: Prisma.JsonNull
};

exports.Prisma.NullableJsonNullValueInput = {
  DbNull: Prisma.DbNull,
  JsonNull: Prisma.JsonNull
};

exports.Prisma.QueryMode = {
  default: 'default',
  insensitive: 'insensitive'
};

exports.Prisma.NullsOrder = {
  first: 'first',
  last: 'last'
};

exports.Prisma.JsonNullValueFilter = {
  DbNull: Prisma.DbNull,
  JsonNull: Prisma.JsonNull,
  AnyNull: Prisma.AnyNull
};


exports.Prisma.ModelName = {
  AdminNotification: 'AdminNotification',
  DeliveryBooking: 'DeliveryBooking',
  DeliveryPartner: 'DeliveryPartner',
  DeliveryTracking: 'DeliveryTracking',
  booking_history: 'booking_history',
  bookings: 'bookings',
  coupons: 'coupons',
  document_submissions: 'document_submissions',
  documents: 'documents',
  email_logs: 'email_logs',
  locations: 'locations',
  payments: 'payments',
  profiles: 'profiles',
  reviews: 'reviews',
  settings: 'settings',
  sms_logs: 'sms_logs',
  trip_initiations: 'trip_initiations',
  users: 'users',
  vehicles: 'vehicles'
};

/**
 * This is a stub Prisma Client that will error at runtime if called.
 */
class PrismaClient {
  constructor() {
    return new Proxy(this, {
      get(target, prop) {
        let message
        const runtime = getRuntime()
        if (runtime.isEdge) {
          message = `PrismaClient is not configured to run in ${runtime.prettyName}. In order to run Prisma Client on edge runtime, either:
- Use Prisma Accelerate: https://pris.ly/d/accelerate
- Use Driver Adapters: https://pris.ly/d/driver-adapters
`;
        } else {
          message = 'PrismaClient is unable to run in this browser environment, or has been bundled for the browser (running in `' + runtime.prettyName + '`).'
        }

        message += `
If this is unexpected, please open an issue: https://pris.ly/prisma-prisma-bug-report`

        throw new Error(message)
      }
    })
  }
}

exports.PrismaClient = PrismaClient

Object.assign(exports, Prisma)
